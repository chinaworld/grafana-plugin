{"version":3,"sources":["../../src/libs/dateformat.js"],"names":["pad","val","len","String","length","getWeek","date","targetThursday","Date","getFullYear","getMonth","getDate","setDate","getDay","firstThursday","ds","getTimezoneOffset","setHours","getHours","weekDiff","Math","floor","getDayOfWeek","dow","kindOf","undefined","Array","isArray","toString","call","slice","toLowerCase","dateFormat","token","timezone","timezoneClip","mask","utc","gmt","arguments","test","isNaN","TypeError","masks","maskSlice","_","d","D","m","y","H","M","s","L","o","W","N","flags","dd","ddd","i18n","dayNames","dddd","mm","mmm","monthNames","mmmm","yy","yyyy","h","hh","HH","MM","ss","l","round","t","tt","T","TT","Z","match","pop","replace","abs","S"],"mappings":";;;;;;;AAmIA,WAASA,GAAT,CAAaC,GAAb,EAAkBC,GAAlB,EAAuB;AACvBD,UAAME,OAAOF,GAAP,CAAN;AACAC,UAAMA,OAAO,CAAb;AACA,WAAOD,IAAIG,MAAJ,GAAaF,GAApB,EAAyB;AACvBD,YAAM,MAAMA,GAAZ;AACD;AACD,WAAOA,GAAP;AACC;;AAED;;;;;;;;AAQA,WAASI,OAAT,CAAiBC,IAAjB,EAAuB;AACvB;AACA,QAAIC,iBAAiB,IAAIC,IAAJ,CAASF,KAAKG,WAAL,EAAT,EAA6BH,KAAKI,QAAL,EAA7B,EAA8CJ,KAAKK,OAAL,EAA9C,CAArB;;AAEA;AACAJ,mBAAeK,OAAf,CAAuBL,eAAeI,OAAf,KAA4B,CAACJ,eAAeM,MAAf,KAA0B,CAA3B,IAAgC,CAA5D,GAAiE,CAAxF;;AAEA;AACA,QAAIC,gBAAgB,IAAIN,IAAJ,CAASD,eAAeE,WAAf,EAAT,EAAuC,CAAvC,EAA0C,CAA1C,CAApB;;AAEA;AACAK,kBAAcF,OAAd,CAAsBE,cAAcH,OAAd,KAA2B,CAACG,cAAcD,MAAd,KAAyB,CAA1B,IAA+B,CAA1D,GAA+D,CAArF;;AAEA;AACA,QAAIE,KAAKR,eAAeS,iBAAf,KAAqCF,cAAcE,iBAAd,EAA9C;AACAT,mBAAeU,QAAf,CAAwBV,eAAeW,QAAf,KAA4BH,EAApD;;AAEA;AACA,QAAII,WAAW,CAACZ,iBAAiBO,aAAlB,KAAoC,WAAS,CAA7C,CAAf;AACA,WAAO,IAAIM,KAAKC,KAAL,CAAWF,QAAX,CAAX;AACC;;AAED;;;;;;;AAOA,WAASG,YAAT,CAAsBhB,IAAtB,EAA4B;AAC5B,QAAIiB,MAAMjB,KAAKO,MAAL,EAAV;AACA,QAAGU,QAAQ,CAAX,EAAc;AACZA,YAAM,CAAN;AACD;AACD,WAAOA,GAAP;AACC;;AAED;;;;;AAKA,WAASC,MAAT,CAAgBvB,GAAhB,EAAqB;AACrB,QAAIA,QAAQ,IAAZ,EAAkB;AAChB,aAAO,MAAP;AACD;;AAED,QAAIA,QAAQwB,SAAZ,EAAuB;AACrB,aAAO,WAAP;AACD;;AAED,QAAI,QAAOxB,GAAP,yCAAOA,GAAP,OAAe,QAAnB,EAA6B;AAC3B,oBAAcA,GAAd,yCAAcA,GAAd;AACD;;AAED,QAAIyB,MAAMC,OAAN,CAAc1B,GAAd,CAAJ,EAAwB;AACtB,aAAO,OAAP;AACD;;AAED,WAAO,GAAG2B,QAAH,CAAYC,IAAZ,CAAiB5B,GAAjB,EACJ6B,KADI,CACE,CADF,EACK,CAAC,CADN,EACSC,WADT,EAAP;AAEC,G;;;;;;;;;AAnMGC,gB,GAAc,YAAW;AACzB,YAAIC,QAAQ,kEAAZ;AACA,YAAIC,WAAW,sIAAf;AACA,YAAIC,eAAe,aAAnB;;AAEA;AACA,eAAO,UAAU7B,IAAV,EAAgB8B,IAAhB,EAAsBC,GAAtB,EAA2BC,GAA3B,EAAgC;;AAErC;AACA,cAAIC,UAAUnC,MAAV,KAAqB,CAArB,IAA0BoB,OAAOlB,IAAP,MAAiB,QAA3C,IAAuD,CAAC,KAAKkC,IAAL,CAAUlC,IAAV,CAA5D,EAA6E;AAC3E8B,mBAAO9B,IAAP;AACAA,mBAAOmB,SAAP;AACD;;AAEDnB,iBAAOA,QAAQ,IAAIE,IAAJ,EAAf;;AAEA,cAAG,EAAEF,gBAAgBE,IAAlB,CAAH,EAA4B;AAC1BF,mBAAO,IAAIE,IAAJ,CAASF,IAAT,CAAP;AACD;;AAED,cAAImC,MAAMnC,IAAN,CAAJ,EAAiB;AACf,kBAAMoC,UAAU,cAAV,CAAN;AACD;;AAEDN,iBAAOjC,OAAO6B,WAAWW,KAAX,CAAiBP,IAAjB,KAA0BA,IAA1B,IAAkCJ,WAAWW,KAAX,CAAiB,SAAjB,CAAzC,CAAP;;AAEA;AACA,cAAIC,YAAYR,KAAKN,KAAL,CAAW,CAAX,EAAc,CAAd,CAAhB;AACA,cAAIc,cAAc,MAAd,IAAwBA,cAAc,MAA1C,EAAkD;AAChDR,mBAAOA,KAAKN,KAAL,CAAW,CAAX,CAAP;AACAO,kBAAM,IAAN;AACA,gBAAIO,cAAc,MAAlB,EAA0B;AACxBN,oBAAM,IAAN;AACD;AACF;;AAED,cAAIO,IAAIR,MAAM,QAAN,GAAiB,KAAzB;AACA,cAAIS,IAAIxC,KAAKuC,IAAI,MAAT,GAAR;AACA,cAAIE,IAAIzC,KAAKuC,IAAI,KAAT,GAAR;AACA,cAAIG,IAAI1C,KAAKuC,IAAI,OAAT,GAAR;AACA,cAAII,IAAI3C,KAAKuC,IAAI,UAAT,GAAR;AACA,cAAIK,IAAI5C,KAAKuC,IAAI,OAAT,GAAR;AACA,cAAIM,IAAI7C,KAAKuC,IAAI,SAAT,GAAR;AACA,cAAIO,IAAI9C,KAAKuC,IAAI,SAAT,GAAR;AACA,cAAIQ,IAAI/C,KAAKuC,IAAI,cAAT,GAAR;AACA,cAAIS,IAAIjB,MAAM,CAAN,GAAU/B,KAAKU,iBAAL,EAAlB;AACA,cAAIuC,IAAIlD,QAAQC,IAAR,CAAR;AACA,cAAIkD,IAAIlC,aAAahB,IAAb,CAAR;AACA,cAAImD,QAAQ;AACVX,eAAMA,CADI;AAEVY,gBAAM1D,IAAI8C,CAAJ,CAFI;AAGVa,iBAAM3B,WAAW4B,IAAX,CAAgBC,QAAhB,CAAyBd,CAAzB,CAHI;AAIVe,kBAAM9B,WAAW4B,IAAX,CAAgBC,QAAhB,CAAyBd,IAAI,CAA7B,CAJI;AAKVC,eAAMA,IAAI,CALA;AAMVe,gBAAM/D,IAAIgD,IAAI,CAAR,CANI;AAOVgB,iBAAMhC,WAAW4B,IAAX,CAAgBK,UAAhB,CAA2BjB,CAA3B,CAPI;AAQVkB,kBAAMlC,WAAW4B,IAAX,CAAgBK,UAAhB,CAA2BjB,IAAI,EAA/B,CARI;AASVmB,gBAAMhE,OAAO8C,CAAP,EAAUnB,KAAV,CAAgB,CAAhB,CATI;AAUVsC,kBAAMnB,CAVI;AAWVoB,eAAMnB,IAAI,EAAJ,IAAU,EAXN;AAYVoB,gBAAMtE,IAAIkD,IAAI,EAAJ,IAAU,EAAd,CAZI;AAaVA,eAAMA,CAbI;AAcVqB,gBAAMvE,IAAIkD,CAAJ,CAdI;AAeVC,eAAMA,CAfI;AAgBVqB,gBAAMxE,IAAImD,CAAJ,CAhBI;AAiBVC,eAAMA,CAjBI;AAkBVqB,gBAAMzE,IAAIoD,CAAJ,CAlBI;AAmBVsB,eAAM1E,IAAIqD,CAAJ,EAAO,CAAP,CAnBI;AAoBVA,eAAMrD,IAAIoB,KAAKuD,KAAL,CAAWtB,IAAI,EAAf,CAAJ,CApBI;AAqBVuB,eAAM1B,IAAI,EAAJ,GAAS,GAAT,GAAgB,GArBZ;AAsBV2B,gBAAM3B,IAAI,EAAJ,GAAS,IAAT,GAAgB,IAtBZ;AAuBV4B,eAAM5B,IAAI,EAAJ,GAAS,GAAT,GAAgB,GAvBZ;AAwBV6B,gBAAM7B,IAAI,EAAJ,GAAS,IAAT,GAAgB,IAxBZ;AAyBV8B,eAAM1C,MAAM,KAAN,GAAcD,MAAM,KAAN,GAAc,CAAClC,OAAOG,IAAP,EAAa2E,KAAb,CAAmB/C,QAAnB,KAAgC,CAAC,EAAD,CAAjC,EAAuCgD,GAAvC,GAA6CC,OAA7C,CAAqDhD,YAArD,EAAmE,EAAnE,CAzBxB;AA0BVmB,eAAM,CAACA,IAAI,CAAJ,GAAQ,GAAR,GAAc,GAAf,IAAsBtD,IAAIoB,KAAKC,KAAL,CAAWD,KAAKgE,GAAL,CAAS9B,CAAT,IAAc,EAAzB,IAA+B,GAA/B,GAAqClC,KAAKgE,GAAL,CAAS9B,CAAT,IAAc,EAAvD,EAA2D,CAA3D,CA1BlB;AA2BV+B,eAAM,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyBvC,IAAI,EAAJ,GAAS,CAAT,GAAa,CAAb,GAAiB,CAACA,IAAI,GAAJ,GAAUA,IAAI,EAAd,IAAoB,EAArB,IAA2BA,CAA3B,GAA+B,EAAzE,CA3BI;AA4BVS,eAAMA,CA5BI;AA6BVC,eAAMA;AA7BI,WAAZ;;AAgCA,iBAAOpB,KAAK+C,OAAL,CAAalD,KAAb,EAAoB,UAAUgD,KAAV,EAAiB;AAC1C,gBAAIA,SAASxB,KAAb,EAAoB;AAClB,qBAAOA,MAAMwB,KAAN,CAAP;AACD;AACD,mBAAOA,MAAMnD,KAAN,CAAY,CAAZ,EAAemD,MAAM7E,MAAN,GAAe,CAA9B,CAAP;AACD,WALM,CAAP;AAMD,SAhFD;AAiFD,OAvFc,E;;AAyFjB4B,iBAAWW,KAAX,GAAmB;AACjB,mBAAyB,0BADR;AAEjB,qBAAyB,QAFR;AAGjB,sBAAyB,aAHR;AAIjB,oBAAyB,cAJR;AAKjB,oBAAyB,oBALR;AAMjB,qBAAyB,SANR;AAOjB,sBAAyB,YAPR;AAQjB,oBAAyB,cARR;AASjB,mBAAyB,YATR;AAUjB,mBAAyB,UAVR;AAWjB,uBAAyB,0BAXR;AAYjB,0BAAyB,kCAZR;AAajB,+BAAyB;AAbR,OAAnB;;AAgBA;AACAX,iBAAW4B,IAAX,GAAkB;AAChBC,kBAAU,CACR,KADQ,EACD,KADC,EACM,KADN,EACa,KADb,EACoB,KADpB,EAC2B,KAD3B,EACkC,KADlC,EAER,QAFQ,EAEE,QAFF,EAEY,SAFZ,EAEuB,WAFvB,EAEoC,UAFpC,EAEgD,QAFhD,EAE0D,UAF1D,CADM;AAKhBI,oBAAY,CACV,KADU,EACH,KADG,EACI,KADJ,EACW,KADX,EACkB,KADlB,EACyB,KADzB,EACgC,KADhC,EACuC,KADvC,EAC8C,KAD9C,EACqD,KADrD,EAC4D,KAD5D,EACmE,KADnE,EAEV,SAFU,EAEC,UAFD,EAEa,OAFb,EAEsB,OAFtB,EAE+B,KAF/B,EAEsC,MAFtC,EAE8C,MAF9C,EAEsD,QAFtD,EAEgE,WAFhE,EAE6E,SAF7E,EAEwF,UAFxF,EAEoG,UAFpG;AALI,OAAlB,CAyFC;;yBAEcjC,U","file":"dateformat.js","sourcesContent":["/*\n * Date Format 1.2.3\n * (c) 2007-2009 Steven Levithan <stevenlevithan.com>\n * MIT license\n *\n * Includes enhancements by Scott Trenda <scott.trenda.net>\n * and Kris Kowal <cixar.com/~kris.kowal/>\n *\n * Accepts a date, a mask, or a date and a mask.\n * Returns a formatted version of the given date.\n * The date defaults to the current date/time.\n * The mask defaults to dateFormat.masks.default.\n */\n\nvar dateFormat = (function() {\n    var token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZWN]|'[^']*'|'[^']*'/g;\n    var timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g;\n    var timezoneClip = /[^-+\\dA-Z]/g;\n\n    // Regexes and supporting functions are cached through closure\n    return function (date, mask, utc, gmt) {\n\n      // You can't provide utc if you skip other args (use the 'UTC:' mask prefix)\n      if (arguments.length === 1 && kindOf(date) === 'string' && !/\\d/.test(date)) {\n        mask = date;\n        date = undefined;\n      }\n\n      date = date || new Date;\n\n      if(!(date instanceof Date)) {\n        date = new Date(date);\n      }\n\n      if (isNaN(date)) {\n        throw TypeError('Invalid date');\n      }\n\n      mask = String(dateFormat.masks[mask] || mask || dateFormat.masks['default']);\n\n      // Allow setting the utc/gmt argument via the mask\n      var maskSlice = mask.slice(0, 4);\n      if (maskSlice === 'UTC:' || maskSlice === 'GMT:') {\n        mask = mask.slice(4);\n        utc = true;\n        if (maskSlice === 'GMT:') {\n          gmt = true;\n        }\n      }\n\n      var _ = utc ? 'getUTC' : 'get';\n      var d = date[_ + 'Date']();\n      var D = date[_ + 'Day']();\n      var m = date[_ + 'Month']();\n      var y = date[_ + 'FullYear']();\n      var H = date[_ + 'Hours']();\n      var M = date[_ + 'Minutes']();\n      var s = date[_ + 'Seconds']();\n      var L = date[_ + 'Milliseconds']();\n      var o = utc ? 0 : date.getTimezoneOffset();\n      var W = getWeek(date);\n      var N = getDayOfWeek(date);\n      var flags = {\n        d:    d,\n        dd:   pad(d),\n        ddd:  dateFormat.i18n.dayNames[D],\n        dddd: dateFormat.i18n.dayNames[D + 7],\n        m:    m + 1,\n        mm:   pad(m + 1),\n        mmm:  dateFormat.i18n.monthNames[m],\n        mmmm: dateFormat.i18n.monthNames[m + 12],\n        yy:   String(y).slice(2),\n        yyyy: y,\n        h:    H % 12 || 12,\n        hh:   pad(H % 12 || 12),\n        H:    H,\n        HH:   pad(H),\n        M:    M,\n        MM:   pad(M),\n        s:    s,\n        ss:   pad(s),\n        l:    pad(L, 3),\n        L:    pad(Math.round(L / 10)),\n        t:    H < 12 ? 'a'  : 'p',\n        tt:   H < 12 ? 'am' : 'pm',\n        T:    H < 12 ? 'A'  : 'P',\n        TT:   H < 12 ? 'AM' : 'PM',\n        Z:    gmt ? 'GMT' : utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),\n        o:    (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + Math.abs(o) % 60, 4),\n        S:    ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (d % 100 - d % 10 != 10) * d % 10],\n        W:    W,\n        N:    N\n      };\n\n      return mask.replace(token, function (match) {\n        if (match in flags) {\n          return flags[match];\n        }\n        return match.slice(1, match.length - 1);\n      });\n    };\n  })();\n\ndateFormat.masks = {\n  'default':               'ddd mmm dd yyyy HH:MM:ss',\n  'shortDate':             'm/d/yy',\n  'mediumDate':            'mmm d, yyyy',\n  'longDate':              'mmmm d, yyyy',\n  'fullDate':              'dddd, mmmm d, yyyy',\n  'shortTime':             'h:MM TT',\n  'mediumTime':            'h:MM:ss TT',\n  'longTime':              'h:MM:ss TT Z',\n  'isoDate':               'yyyy-mm-dd',\n  'isoTime':               'HH:MM:ss',\n  'isoDateTime':           'yyyy-mm-dd\\'T\\'HH:MM:sso',\n  'isoUtcDateTime':        'UTC:yyyy-mm-dd\\'T\\'HH:MM:ss\\'Z\\'',\n  'expiresHeaderFormat':   'ddd, dd mmm yyyy HH:MM:ss Z'\n};\n\n// Internationalization strings\ndateFormat.i18n = {\n  dayNames: [\n    'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat',\n    'Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'\n  ],\n  monthNames: [\n    'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec',\n    'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'\n  ]\n};\n\nfunction pad(val, len) {\nval = String(val);\nlen = len || 2;\nwhile (val.length < len) {\n  val = '0' + val;\n}\nreturn val;\n}\n\n/**\n * Get the ISO 8601 week number\n * Based on comments from\n * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html\n *\n * @param  {Object} `date`\n * @return {Number}\n */\nfunction getWeek(date) {\n// Remove time components of date\nvar targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n\n// Change date to Thursday same week\ntargetThursday.setDate(targetThursday.getDate() - ((targetThursday.getDay() + 6) % 7) + 3);\n\n// Take January 4th as it is always in week 1 (see ISO 8601)\nvar firstThursday = new Date(targetThursday.getFullYear(), 0, 4);\n\n// Change date to Thursday same week\nfirstThursday.setDate(firstThursday.getDate() - ((firstThursday.getDay() + 6) % 7) + 3);\n\n// Check if daylight-saving-time-switch occured and correct for it\nvar ds = targetThursday.getTimezoneOffset() - firstThursday.getTimezoneOffset();\ntargetThursday.setHours(targetThursday.getHours() - ds);\n\n// Number of weeks between target Thursday and first Thursday\nvar weekDiff = (targetThursday - firstThursday) / (86400000*7);\nreturn 1 + Math.floor(weekDiff);\n}\n\n/**\n * Get ISO-8601 numeric representation of the day of the week\n * 1 (for Monday) through 7 (for Sunday)\n * \n * @param  {Object} `date`\n * @return {Number}\n */\nfunction getDayOfWeek(date) {\nvar dow = date.getDay();\nif(dow === 0) {\n  dow = 7;\n}\nreturn dow;\n}\n\n/**\n * kind-of shortcut\n * @param  {*} val\n * @return {String}\n */\nfunction kindOf(val) {\nif (val === null) {\n  return 'null';\n}\n\nif (val === undefined) {\n  return 'undefined';\n}\n\nif (typeof val !== 'object') {\n  return typeof val;\n}\n\nif (Array.isArray(val)) {\n  return 'array';\n}\n\nreturn {}.toString.call(val)\n  .slice(8, -1).toLowerCase();\n};\n\nexport default dateFormat;"]}